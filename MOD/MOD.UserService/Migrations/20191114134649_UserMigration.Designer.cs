// <auto-generated />
using System;
using MOD.UserService.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MOD.UserService.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20191114134649_UserMigration")]
    partial class UserMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MOD.UserService.Models.Admin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("MOD.UserService.Models.Mentor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("active");

                    b.Property<bool>("confirmedSignup");

                    b.Property<long>("contactNumber");

                    b.Property<string>("firstName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("lastName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("linkedinUrl")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("registrationCode")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("resetPassword");

                    b.Property<DateTime>("resetPasswordDate");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("yearsOfExperience");

                    b.HasKey("Id");

                    b.ToTable("Mentors");
                });

            modelBuilder.Entity("MOD.UserService.Models.MentorSkill", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("facilitiesOffered");

                    b.Property<long>("mentorId");

                    b.Property<string>("mentorName")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("selfrating");

                    b.Property<long>("skillId");

                    b.Property<string>("skillName")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("trainingsDelivered");

                    b.Property<int>("yearsOfExperience");

                    b.HasKey("id");

                    b.ToTable("MentorSkills");
                });

            modelBuilder.Entity("MOD.UserService.Models.Skill", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Fees");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Prerequisites")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TOC")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("duration");

                    b.HasKey("ID");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("MOD.UserService.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("active");

                    b.Property<bool>("confirmedSignup");

                    b.Property<long>("contactNumber");

                    b.Property<string>("email")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("firstName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("lastName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("linkedinUrl")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("registrationCode")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("resetPassword");

                    b.Property<DateTime>("resetPasswordDate");

                    b.Property<string>("role")
                        .HasColumnType("varchar(1)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("yearsOfExperience");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
